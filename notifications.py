import aiohttp
import logging
from config import TELEGRAM_TOKEN

logger = logging.getLogger("notifications")

TELEGRAM_API_URL = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"


# === üìå –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è ===
async def send_message(chat_id: int, text: str):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—É –≤ Telegram"""
    async with aiohttp.ClientSession() as session:
        await session.post(
            TELEGRAM_API_URL,
            json={"chat_id": chat_id, "text": text, "parse_mode": "HTML"},
        )
    logger.info(f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")


# === üß© –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–æ–π –¥–∞–Ω–Ω—ã—Ö ===
def format_message(template: str, data: dict) -> str:
    """
    –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ (–∏–º—è, –¥–∞—Ç–∞, —É—Å–ª—É–≥–∞ –∏ —Ç.–ø.) –≤ —à–∞–±–ª–æ–Ω —Ç–µ–∫—Å—Ç–∞.
    –ü—Ä–∏–º–µ—Ä: "{name}, –≤—ã –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ {service}" ‚Üí "–ê–Ω–Ω–∞, –≤—ã –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ –º–∞–Ω–∏–∫—é—Ä"
    """
    for key, value in data.items():
        template = template.replace(f"{{{key}}}", str(value))
    return template


# === üßæ –®–ê–ë–õ–û–ù–´ –°–û–û–ë–©–ï–ù–ò–ô ===
TEMPLATES = {
    "new_booking": (
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}!üå∏\n\n"
        "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ <b>{service}</b> –≤ —Å—Ç—É–¥–∏–∏ <b>KUTIKULA</b> üíÖ\n"
        "üìÖ –î–∞—Ç–∞: {day_month}\n"
        "üïí –í—Ä–µ–º—è: {start_time}\n"
        "üë©‚Äçüé® –ú–∞—Å—Ç–µ—Ä: {staff}\n"
        "üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {price} ‚ÇΩ\n\n"
        "–ú—ã –±—É–¥–µ–º –∂–¥–∞—Ç—å –≤–∞—Å –ø–æ –∞–¥—Ä–µ—Å—É: –ö–∞–∑–∞–Ω—å, —É–ª. –ê–∫–∞–¥–µ–º–∏–∫–∞ –ö–æ—Ä–æ–ª–µ–≤–∞, 26."
    ),
    "cancel_booking": (
        "‚ö†Ô∏è {name}, –≤–∞—à–∞ –∑–∞–ø–∏—Å—å –Ω–∞ {service} ({day_month}, {start_time}) –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.\n"
        "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ üí¨"
    ),
    "bonus": (
        "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã–±—Ä–∞–ª–∏ –Ω–∞—Å, {name}!üíñ\n"
        "–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω –±–æ–Ω—É—Å –∑–∞ –ø–æ—Å–µ—â–µ–Ω–∏–µ {service} ‚Äî {bonus_points} –±–∞–ª–ª–æ–≤ üéÅ"
    ),
}


# === ‚ú® –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ —Å–æ–±—ã—Ç–∏—é ===
async def send_new_booking_notification(client, booking):
    """–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏"""
    text = format_message(
        TEMPLATES["new_booking"],
        {
            "name": client.get("name"),
            "service": booking.get("service_name"),
            "day_month": booking.get("day_month"),
            "start_time": booking.get("start_time"),
            "staff": booking.get("staff_name"),
            "price": booking.get("price", "‚Äî"),
        },
    )
    await send_message(client["telegram_id"], text)


async def send_cancel_notification(client, booking):
    """–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞–ø–∏—Å–∏"""
    text = format_message(
        TEMPLATES["cancel_booking"],
        {
            "name": client.get("name"),
            "service": booking.get("service_name"),
            "day_month": booking.get("day_month"),
            "start_time": booking.get("start_time"),
        },
    )
    await send_message(client["telegram_id"], text)


async def send_bonus_notification(client, booking):
    """–°–æ–æ–±—â–µ–Ω–∏–µ —Å –±–æ–Ω—É—Å–∞–º–∏ –ø–æ—Å–ª–µ –ø–æ—Å–µ—â–µ–Ω–∏—è"""
    text = format_message(
        TEMPLATES["bonus"],
        {
            "name": client.get("name"),
            "service": booking.get("service_name"),
            "bonus_points": booking.get("bonus_points", 50),
        },
    )
    await send_message(client["telegram_id"], text)
